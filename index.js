import express from "express";
import { verifyKeyMiddleware } from "discord-interactions";
import dotenv from "dotenv";

dotenv.config();

const app = express();
const PORT = process.env.PORT || 10000;

app.post(
  "/interactions",
  verifyKeyMiddleware(process.env.DISCORD_PUBLIC_KEY),
  async (req, res) => {
    const interaction = req.body;

    // PING
    if (interaction.type === 1) {
      return res.send({ type: 1 }); // PONG
    }

    // SLASH command
    if (interaction.type === 2) {
      const { name, options } = interaction.data;

      // /chat
      if (name === "chat") {
        const message = options.find(o => o.name === "message")?.value;
        return res.send({
          type: 4,
          data: {
            content: `üó®Ô∏è –í—ã —Å–∫–∞–∑–∞–ª–∏: "${message}"`
          }
        });
      }

      // /rules
      if (name === "rules") {
        return res.send({
          type: 4,
          data: {
            content: "**üìú –ü—Ä–∞–≤–∏–ª–∞ —Å–µ—Ä–≤–µ—Ä–∞:**\n1. –ë—É–¥—å –≤–µ–∂–ª–∏–≤\n2. –ù–µ —Å–ø–∞–º—å\n3. –°–æ–±–ª—é–¥–∞–π Discord ToS"
          }
        });
      }

      // /help
      if (name === "help") {
        return res.send({
          type: 4,
          data: {
            content:
              "**üõ†Ô∏è –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:**\n" +
              "`/chat <—Å–æ–æ–±—â–µ–Ω–∏–µ>` ‚Äî —Å–∏–º—É–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —á–∞—Ç\n" +
              "`/rules` ‚Äî –ø—Ä–∞–≤–∏–ª–∞\n" +
              "`/ticket <—Ç–µ–º–∞>` ‚Äî —Å–æ–∑–¥–∞—Ç—å —Ç–∏–∫–µ—Ç\n" +
              "`/game <–¥–µ–π—Å—Ç–≤–∏–µ>` ‚Äî —Ç–µ–∫—Å—Ç–æ–≤–∞—è –∏–≥—Ä–∞\n" +
              "`/help` ‚Äî —ç—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞"
          }
        });
      }

      // /ticket
      if (name === "ticket") {
        const —Ç–µ–º–∞ = options.find(o => o.name === "—Ç–µ–º–∞")?.value;
        return res.send({
          type: 4,
          data: {
            content: `üé´ –¢–∏–∫–µ—Ç —Å–æ–∑–¥–∞–Ω!\n–¢–µ–º–∞: **${—Ç–µ–º–∞}**\n–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏.`
          }
        });
      }

      // /game
      if (name === "game") {
        const –¥–µ–π—Å—Ç–≤–∏–µ = options.find(o => o.name === "–¥–µ–π—Å—Ç–≤–∏–µ")?.value.toLowerCase();

        let response = "ü§∑ –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ.";
        if (–¥–µ–π—Å—Ç–≤–∏–µ.includes("–∏–¥—Ç–∏")) {
          response = "üö∂ –í—ã –∏–¥—ë—Ç–µ –ø–æ —Ç—ë–º–Ω–æ–º—É –ª–µ—Å—É...";
        } else if (–¥–µ–π—Å—Ç–≤–∏–µ.includes("–æ—Å–º–æ—Ç—Ä–µ—Ç—å—Å—è")) {
          response = "üëÄ –í—ã –æ—Å–º–æ—Ç—Ä–µ–ª–∏—Å—å –∏ –∑–∞–º–µ—Ç–∏–ª–∏ —Å—É–Ω–¥—É–∫.";
        } else if (–¥–µ–π—Å—Ç–≤–∏–µ.includes("–≤–∑—è—Ç—å")) {
          response = "üì¶ –í—ã –≤–∑—è–ª–∏ –ø—Ä–µ–¥–º–µ—Ç!";
        }

        return res.send({
          type: 4,
          data: { content: response }
        });
      }

      // –ï—Å–ª–∏ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–æ
      return res.send({
        type: 4,
        data: { content: "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞" }
      });
    }
  }
);

// —Ç–µ—Å—Ç–æ–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
app.get("/", (req, res) => {
  res.send("üëã –ë–æ—Ç –∂–∏–≤–æ–π!");
});

app.listen(PORT, () => {
  console.log(`–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:${PORT}`);
});
